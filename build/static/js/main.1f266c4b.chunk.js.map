{"version":3,"sources":["BooksAPI.js","book.jsx","mainPage.jsx","searchPage.jsx","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","_this","this","displayImage","props","imageLinks","thumbnail","react_default","a","createElement","className","style","width","height","backgroundImage","onChange","e","moveShelf","target","value","currentShelf","disabled","title","authors","Component","mainPage","filter","map","key","book_book","react_router_dom","to","searchPage","state","keyword","booksFound","updateStateKeyword","setState","updateStateBooks","BooksAPI","error","_this2","type","placeholder","searchedbook","BooksApp","_this3","react_router","path","exact","render","mainPage_mainPage","searchPage_searchPage","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1f266c4b.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\r\n\r\nexport default class book extends Component {\r\n    render() {\r\n        const displayImage = this.props.book.imageLinks ? this.props.book.imageLinks.thumbnail : '';\r\n        return (\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div className=\"book-cover\" style={{\r\n                        width: 128,\r\n                        height: 188,\r\n                        backgroundImage: `url(${displayImage})`\r\n                    }}></div>\r\n                        <div className=\"book-shelf-changer\">\r\n                        <select\r\n                            onChange={(e) => this.props.moveShelf(this.props.book,e.target.value)}\r\n                            value={this.props.currentShelf}\r\n                        >\r\n                            <option value=\"move\" disabled>Move to...</option>\r\n                             <option value=\"currentlyReading\">Currently Reading</option>\r\n                             <option value=\"wantToRead\">Want to Read</option>\r\n                             <option value=\"read\">Read</option>\r\n                             <option value=\"none\">None</option>\r\n                           </select>\r\n                        </div>\r\n                     </div>\r\n                <div className=\"book-title\">{this.props.book.title}</div>\r\n                <div className=\"book-authors\">{this.props.book.authors}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{ Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Book from './book'\r\n\r\nexport default class mainPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>My Reads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                <div>\r\n                    <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {\r\n                    this.props.books\r\n                    .filter(book => book.shelf === 'currentlyReading')\r\n                    .map(book => (\r\n                        <li key={book.id}>\r\n                        <Book\r\n                          book={book}\r\n                          moveShelf={this.props.moveShelf}\r\n                          currentShelf=\"currentlyReading\"\r\n                        />\r\n                        </li>\r\n                    ))\r\n                  }\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                {\r\n                    this.props.books\r\n                    .filter(book => book.shelf === 'wantToRead')\r\n                    .map(book => (\r\n                        <li key={book.id}>\r\n                        <Book\r\n                          book={book}\r\n                          moveShelf={this.props.moveShelf}\r\n                          currentShelf=\"wantToRead\"\r\n                        />\r\n                        </li>\r\n                    ))\r\n                }\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                      \r\n                {\r\n                    this.props.books\r\n                    .filter(book => book.shelf === 'read')\r\n                    .map(book => (\r\n                        <li key={book.id}>\r\n                        <Book\r\n                          book={book}\r\n                          moveShelf={this.props.moveShelf}\r\n                          currentShelf=\"read\"\r\n                        />\r\n                        </li>\r\n                    ))\r\n                }\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n              <Link to=\"/search\" className=\"open-search-button\">Add a book</Link>\r\n        </div>\r\n      </div>\r\n        )\r\n    }\r\n}\r\n","import React,{ Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Book from './book'\r\nimport * as BooksAPI from './BooksAPI'\r\n\r\nexport default class searchPage extends Component {\r\n  state = {\r\n    keyword: '',\r\n    booksFound: []\r\n  }\r\n\r\n  updateStateKeyword = (keyword) => {\r\n    this.setState({ keyword })\r\n    this.updateStateBooks(keyword)\r\n  }\r\n\r\n  updateStateBooks = (keyword) => {\r\n    if (keyword) {\r\n      BooksAPI.search(keyword).then((booksFound) => {\r\n        if (booksFound.error) {\r\n          this.setState({booksFound: []})\r\n        } else {\r\n          this.setState({booksFound})\r\n        }\r\n      })\r\n    } else {\r\n      this.setState({booksFound: []})\r\n    }\r\n  }\r\n\r\n  render() {\r\n        return (\r\n            <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <Link to=\"/\" className=\"close-search\">Close</Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search by title or author\"\r\n                  value={this.state.keyword}\r\n                  onChange={(e) => this.updateStateKeyword(e.target.value)}\r\n                />\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n                {\r\n                  this.state.booksFound.map(searchedbook => {\r\n                    let shelf = \"none\";\r\n                    this.props.books.map(book => book.id === searchedbook.id ? shelf = book.shelf : '')\r\n                    return (\r\n                      <li key={searchedbook.id}>\r\n                        <Book book={searchedbook} moveShelf={this.props.moveShelf} currentShelf={shelf}/>\r\n                      </li>\r\n                    )\r\n                  })  \r\n                }\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport Main from './mainPage'\nimport SearchPage from './searchPage'\nimport { Route } from 'react-router-dom'\n\nclass BooksApp extends React.Component {\n  state = {\n    books: []\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll().then((books) => {\n      this.setState({books})\n    })\n  }\n\n  moveShelf = (book, shelf) => {\n    BooksAPI.update(book,shelf)\n    BooksAPI.getAll().then((books) => {\n      this.setState({books})\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n\n        <Route path=\"/\" exact render={() => (\n          <Main books={this.state.books} moveShelf={this.moveShelf}/>\n        )}/>\n\n        <Route path=\"/search\" exact render={() => (\n          <SearchPage moveShelf={this.moveShelf} books={this.state.books}/>\n        )}/>\n        \n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'))\n"],"sourceRoot":""}